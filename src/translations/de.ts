import { Translation } from '../translations.js';

export const germanTranslations: Translation = {
    // Main Menu
    title: "Evas Einmaleins Spiel",
    subtitle: "Lerne mit Foxy das Einmaleins!",
    practiceMode: "√úben",
    quizMode: "Quiz",
    adventureMode: "Abenteuer",
    memoryGame: "Memory",
    settings: "Einstellungen",
    progress: "Fortschritt",
    
    // Practice Mode
    practiceTitle: "Einmaleins √úben",
    selectTable: "W√§hle eine Reihe:",
    showHints: "Tipps anzeigen",
    backToMenu: "Zur√ºck zum Men√º",
    smartStrategiesTitle: "Schlaue Strategien:",
    visualStrategyLabel: "Sehen: Punkte z√§hlen",
    patternStrategyLabel: "Muster: Spezielle Tricks",
    countingStrategyLabel: "Schritte: In Schritten z√§hlen",
    breakdownStrategyLabel: "Aufteilen: Gro√üe Zahlen teilen",
    kinestheticStrategyLabel: "Anfassen: Mit den H√§nden lernen",
    auditoryStrategyLabel: "H√∂ren: Reime und Ger√§usche",
    smartStrategiesDescriptionShow: "Die intelligenten Strategien werden auf dem √úbungsbildschirm angezeigt.",
    smartStrategiesDescriptionHide: "Die intelligenten Strategien werden auf dem √úbungsbildschirm ausgeblendet.",
    practiceAreasTitle: "√úbungsbereiche:",
    practiceAreasMessage: "Du √ºbst gerade das Einmaleins f√ºr: {tables}. Das wird bestimmt super ‚Äì die schlauen Tipps helfen dir dabei!",
    keepTryingMessage: "Gib nicht auf! Probiere den schlauen Tipp f√ºr einen anderen L√∂sungsweg.",
    newStrategyLabel: "Neue Strategie",
    consecutiveCorrectMessage: "{count} hintereinander! Du bist super!",
    
    // Quiz Mode
    quizTitle: "Einmaleins Quiz",
    score: "Punkte",
    timeLeft: "Zeit √ºbrig",
    question: "Frage",
    correct: "Super, Eva!",
    incorrect: "Fast richtig, Eva!",
    tryAgain: "Du schaffst das, Eva! Foxy glaubt an dich!",
    wellDone: "Toll gemacht, Eva!",
    excellent: "Ausgezeichnet, Eva! Foxy ist stolz auf dich!",
    fantastic: "Fantastisch, Eva! Du bist ein Mathe-Star!",
    yourResult: "Ihr Ergebnis:",

    // Adventure Mode
    adventureTitle: "Mathe Abenteuer",
    level: "Level",
    stars: "Sterne",
    complete: "Abgeschlossen",
    nextLevel: "N√§chstes Level",
    
    // Memory Game
    memoryTitle: "Einmaleins Memory",
    findPairs: "Finde die Paare",
    moves: "Z√ºge",
    
    // Settings
    settingsTitle: "Einstellungen",
    language: "Sprache",
    difficulty: "Schwierigkeit",
    sound: "Ton",
    on: "An",
    off: "Aus",
    easy: "Leicht",
    medium: "Mittel",
    hard: "Schwer",
    
    // Progress
    progressTitle: "Evas Fortschritt",
    tablesLearned: "Evas gelernte Reihen",
    totalStars: "Evas Sterne",
    achievements: "Evas Erfolge",
    
    // Common
    welcomeMessage: "Willkommen zur√ºck, Eva! Foxy freut sich, mit dir zu lernen! ü¶ä‚ú®",
    start: "Start",
    play: "Spielen",
    pause: "Pause",
    continue: "Weiter",
    restart: "Neu starten",
    finish: "Fertig",
    next: "Weiter",
    previous: "Zur√ºck",
    check: "Pr√ºfen",
    hint: "Tipp",
    answer: "Antwort",
    loading: "Laden...",
    
    // Menu descriptions
    practiceModeDesc: "√úbe mit Foxy in deinem eigenen Tempo",
    quizModeDesc: "Zeige Foxy dein Wissen!",
    adventureModeDesc: "Gehe mit Foxy auf ein Mathe-Abenteuer!",
    memoryGameDesc: "Hilf Foxy, die passenden Paare zu finden!",
    
    // Quiz specific
    chooseDifficulty: "W√§hle deine Schwierigkeit:",
    tables1to5: "1-5 Reihen",
    tables1to10: "1-10 Reihen",
    tables1to12: "1-12 Reihen",
    seconds90: "90 Sekunden",
    seconds60: "60 Sekunden",
    seconds45: "45 Sekunden",
    questions10: "10 Fragen",
    questionOf: "Frage",
    points: "Punkte",
    correctAnswer: "Richtige Antwort",
    quizFinished: "Quiz beendet!",
    highScore: "Highscore",
    quizHighScores: "Quiz Highscores",
    
    // Settings specific
    soundEnabled: "T√∂ne und Effekte sind aktiviert",
    soundDisabled: "T√∂ne und Effekte sind deaktiviert",
    aboutGame: "√úber das Spiel",
    gameDescription: "Hallo Eva! Dieses Spiel hilft dir und Foxy dabei, das Einmaleins spielerisch zu lernen. W√§hle zwischen verschiedenen Spielmodi und sammle Sterne f√ºr richtige Antworten!",
    versionInfo: "Version 2.1 ‚Ä¢ Speziell f√ºr iPad optimiert",
    
    // Adventure mode specific
    chooseAdventure: "W√§hle dein Abenteuer!",
    tables: "Reihen:",
    questions: "Fragen",
    time: "Zeit",
    required: "ben√∂tigt",
    completeLevel: "Schlie√üe Level",
    
    // Level titles and descriptions
    level1Title: "Kleine Schritte",
    level1Desc: "Lerne die 1er und 2er Reihe",
    level2Title: "Dreifacher Spa√ü",
    level2Desc: "Meistere die 3er Reihe",
    level3Title: "Viereckige Zahlen",
    level3Desc: "Entdecke die 4er Reihe",
    level4Title: "F√ºnf Sterne",
    level4Desc: "Die 5er Reihe wartet auf dich!",
    level5Title: "Sechser Zauber",
    level5Desc: "Bezaubere mit der 6er Reihe",
    level6Title: "Gl√ºckszahl Sieben",
    level6Desc: "Die 7er Reihe bringt Gl√ºck!",
    level7Title: "Acht Achterbahn",
    level7Desc: "Fahre mit der 8er Reihe Achterbahn",
    level8Title: "Neun Leben",
    level8Desc: "Die 9er Reihe hat neun Leben",
    level9Title: "Perfekte Zehn",
    level9Desc: "Erreiche die Perfektion mit der 10er Reihe",
    level10Title: "Gro√üer Champion",
    level10Desc: "Meistere alle Reihen zusammen!",
    
    // Memory game specific
    pairs: "Paare",
    memoryComplete: "Du hast alle Paare in {moves} Z√ºgen gefunden!",
    reward: "Belohnung:",
    playAgain: "Nochmal",
    
    // Real-world math
    realWorldMath: "Mathe im Alltag",
    fantasyMath: "Zauberhafte Mathematik",
    realWorldDesc: "Entdecke Foxy, wo Einmaleins im echten Leben vorkommt!",
    fantasyDesc: "Tauche mit Foxy in magische Welten ein und lerne mit Zauberwesen!",
    
    // Progress/Achievement specific
    tablesProgress: "Einmaleins-Reihen Fortschritt",
    mathChampion: "Du bist ein echter Mathe-Champion! üèÜ",
    allTablesMastered: "Du hast alle Einmaleins-Reihen gemeistert!",
    tablesToMaster: "Noch {count} Reihen bis zum Einmaleins-Meister!",
    fantasticsProgress: "Fantastisch! Du machst tolle Fortschritte! ‚≠ê",
    greatKeepGoing: "Gro√üartig! Weiter so! üåü",
    requiredLabel: "Ben√∂tigt:",
    
    // Achievement titles
    firstStarTitle: "Erster Stern",
    starCollectorTitle: "Sternensammler",
    firstTableTitle: "Erste Reihe gemeistert",
    tableMasterTitle: "Einmaleins-Meister",
    hardWorkerTitle: "Flei√übienchen",
    mathChampionTitle: "Mathe-Champion",
    
    // Achievement descriptions
    firstStarDesc: "Sammle deinen ersten Stern",
    starCollectorDesc: "Sammle 50 Sterne",
    firstTableDesc: "Lerne deine erste Einmaleins-Reihe",
    tableMasterDesc: "Lerne alle 10 Einmaleins-Reihen",
    hardWorkerDesc: "Sammle 100 Sterne",
    mathChampionDesc: "Sammle 200 Sterne",

    // AdventureMode specific
    levelCompleted: "Level geschafft!",
    levelNotCompleted: "Noch nicht geschafft",
    correctAnswersLabel: "Richtige Antworten:",
    accuracyLabel: "Genauigkeit:",
    starsEarnedLabel: "Sterne erhalten:",
    repeatLevel: "Wiederholen",
    selectLevel: "Level w√§hlen",

    // FantasyMath specific
    magicProblemTitle: "Magische Aufgabe:",
    startMagicButton: "Magie beginnen",
    magicExpressionQuestion: "Welcher Zauber l√∂st diese Aufgabe?",
    magicAnswerQuestion: "Welches magische Ergebnis?",
    checkMagicButton: "Magie pr√ºfen",
    magicCorrectResult: "Fantastisch, Eva! Die Magie hat geklappt!",
    magicIncorrectResult: "Versuche deine Magie nochmal!",
    correctSpellLabel: "Richtiger Zauber:",
    magicStarMessage: "Foxy bewundert deine Magie!",
    moreMagicButton: "Mehr Magie",
    otherAdventuresButtonFantasy: "Andere Abenteuer",
    magicCalculationLabel: "Magische Rechnung:",

    // MemoryGame specific
    resetButtonLabel: "Neu",
    newDifficultyButton: "Neue Schwierigkeit",
    changeDifficultyButton: "Schwierigkeit √§ndern",

    // PracticeMode specific
    tableSeriesLabel: "{tableNumber}er Reihe",
    correctAnswersSuffix: "richtig",
    percentageCorrectSuffix: "% richtig",
    thinkHintPrefix: "Denke an:",
    oneStarEarned: "+1 Stern erhalten!",
    correctAnswerIs: "Die richtige Antwort ist",
    newProblemButton: "Neue Aufgabe",
    selectOtherTableButton: "Andere Reihe w√§hlen",
    showAnswerButton: "Antwort zeigen",

    // Progress specific
    achievedStatus: "Erreicht!",

    // RealWorldMath specific
    problemLabel: "Aufgabe:",
    startSolutionButton: "L√∂sung beginnen",
    expressionQuestion: "Welcher Ausdruck l√∂st diese Aufgabe?",
    answerQuestion: "Wie lautet die Antwort?",
    evaFantasticResult: "Fantastisch, Eva!",
    tryAgainEva: "Versuche es nochmal!",
    correctSolutionLabel: "Richtige L√∂sung:",
    foxyProudMessage: "Foxy ist stolz auf dich!",
    otherProblemsButton: "Andere Aufgaben",
    calculationLabel: "Rechnung:",

    // Settings specific
    germanLanguage: "Deutsch",
    russianLanguage: "–†—É—Å—Å–∫–∏–π",

    // Scenario Data (RealWorldMath)
    realWorldScenarioData: [
      {
        title: "Einkaufen im Laden",
        description: "Eva kauft Geschenke f√ºr Freunde",
        problem: "Eva m√∂chte 4 Packungen Aufkleber kaufen. Jede Packung hat 6 Aufkleber. Wie viele Aufkleber wird sie insgesamt haben?",
      },
      {
        title: "Bauen mit Bl√∂cken",
        description: "Eva baut ein Schloss aus Baukl√∂tzen",
        problem: "Eva baut ein Schloss. Jede Etage hat 7 Bl√∂cke und es gibt 3 Etagen. Wie viele Bl√∂cke braucht sie f√ºr das ganze Schloss?",
      },
      {
        title: "Busfahrt zum Zoo",
        description: "Ausflug in den Zoo",
        problem: "Der Bus hat 8 Sitzreihen. In jeder Reihe k√∂nnen 4 Personen sitzen. Wie viele Menschen passen in den Bus?",
      },
      {
        title: "Pizza f√ºr die Party",
        description: "Eva bestellt Pizza f√ºr ihren Geburtstag",
        problem: "Eva hat 3 Pizzen bestellt. Jede Pizza wurde in 8 St√ºcke geschnitten. Wie viele Pizzast√ºcke gibt es insgesamt?",
      },
      {
        title: "Brettspiel",
        description: "Spiel mit Foxy und Freunden",
        problem: "Eva spielt ein Brettspiel. Jeder der 5 Spieler hat 6 Karten. Wie viele Karten sind insgesamt im Spiel?",
      },
      {
        title: "Blumengarten",
        description: "Eva pflanzt Blumen im Garten",
        problem: "Eva hat Blumen in 4 Reihen gepflanzt. In jeder Reihe sind 9 Blumen. Wie viele Blumen hat Eva insgesamt gepflanzt?",
      },
    ],

    // Scenario Data (FantasyMath)
    fantasyScenarioData: [
      {
        title: "Drachensch√§tze",
        description: "Eva hilft einem freundlichen Drachen",
        problem: "Drache Fira bewacht 3 Schatzh√∂hlen. In jeder H√∂hle sind 7 Goldm√ºnzen. Wie viele Goldm√ºnzen hat der Drache insgesamt?",
      },
      {
        title: "Einhorn im Wald",
        description: "Eva trifft ein magisches Einhorn",
        problem: "Einhorn Starlight hat 4 Regenbogen erschaffen. Jeder Regenbogen hat 6 bunte Streifen. Wie viele Farbstreifen hat das Einhorn insgesamt gemacht?",
      },
      {
        title: "Meerjungfrau Schloss",
        description: "Eva taucht zu einer Meerjungfrau ins Unterwasserreich",
        problem: "Meerjungfrau Marina schm√ºckt ihr Schloss. Sie hat Perlen in 5 Reihen mit je 8 Perlen gelegt. Wie viele Perlen sind das insgesamt?",
      },
      {
        title: "Bl√ºtenfee",
        description: "Eva hilft der Blumenfee",
        problem: "Fee Bloom pflanzt Zauberblumen. Sie hat 6 Beete angelegt, auf jedem Beet sind 9 Blumen. Wie viele Zauberblumen hat die Fee insgesamt gepflanzt?",
      },
      {
        title: "Ph√∂nix und Flammen",
        description: "Eva beobachtet den Feuervogel",
        problem: "Ph√∂nix Flame erschafft Feuerfedern. Er hat 7 Gruppen mit je 5 Federn pro Gruppe gemacht. Wie viele Feuerfedern sind das insgesamt?",
      },
      {
        title: "Zauberer Foxy",
        description: "Foxy lernt Magie zusammen mit Eva",
        problem: "Zauberer Foxy braut Zaubertr√§nke. Er hat 8 Kessel, in jedem Kessel sind 4 magische Zutaten. Wie viele Zutaten sind das insgesamt?",
      },
    ],

    // MemoryGame specific
    easyDetails: "6 Paare ‚Ä¢ 1-5 Reihen",
    mediumDetails: "8 Paare ‚Ä¢ 1-8 Reihen",
    hardDetails: "10 Paare ‚Ä¢ 1-10 Reihen",
    puzzleEmoji: "üß©",

    // PracticeMode specific
    tableButtonSuffix: "x",
    mathSymbolsAlt: "Mathe Symbole",


    // Progress specific
    tableProgressSuffix: "x",

    // AdventureMode specific
    timeSecondsSuffix: "s",
    accuracyPercentSuffix: "%",
    levelDefaultTitle: "Level {id}",
    levelDefaultDesc: "Beschreibung f√ºr Level {id}",
    completeLevelRequirement: "Schlie√üe Level {id} ab",

    // Settings specific
    difficultyEasyPrefix: "üåü",
    difficultyMediumPrefix: "‚≠ê‚≠ê",
    difficultyHardPrefix: "‚≠ê‚≠ê‚≠ê",

    // Foxy specific
    foxyMascotAltText: "Foxy das Maskottchen",
    foxyWelcomeMainMenu: "Hallo Eva! Ich bin Foxy! Lass uns zusammen das Einmaleins entdecken. W√§hle ein Spiel, um zu starten!",
    foxyVisibilityTitle: "Foxy Sichtbarkeit",
    foxyShow: "Anzeigen",
    foxyHide: "Verstecken",
    foxyVisibilityDescriptionShow: "Foxy ist sichtbar und hilft dir.",
    foxyVisibilityDescriptionHide: "Foxy ist versteckt.",

    // Foxy contextual messages
    foxyIntroPracticeMode: "Hallo Eva! Im √úbungsmodus kannst du ganz in Ruhe die Einmaleinsreihen trainieren. Foxy ist da, um dir zu helfen!",
    foxyIntroQuizMode: "Zeit f√ºr ein Quiz, Eva! Zeig Foxy, was du gelernt hast. Viel Erfolg!",
    foxyIntroAdventureMode: "Auf ins Abenteuer, Eva! Foxy begleitet dich auf dieser spannenden Reise durch die Welt der Zahlen.",
    foxyIntroMemoryGame: "Finde die passenden Karten, Eva! Foxy dr√ºckt dir die Daumen f√ºr dieses knifflige Memory.",
    foxyIntroRealWorldMath: "Schau mal, Eva! Hier zeigt dir Foxy, wo Mathe im Alltag √ºberall steckt. Spannend, oder?",
    foxyIntroFantasyMath: "Willkommen in der Zauberwelt, Eva! Foxy und magische Wesen warten darauf, mit dir Mathe zu entdecken.",

    foxyEncouragement1: "Du machst das super, Eva! Foxy ist stolz auf dich. Weiter so!",
    foxyEncouragement2: "Foxy wei√ü, dass du das schaffst! Gib nicht auf!",
    foxyEncouragement3: "Genau so! √úbung macht den Meister, Eva!",

    foxyCongrats1: "Wow, Eva! Foxy ist total beeindruckt von dir!",
    foxyCongrats2: "Spitze! Du bist ein richtiges Mathe-Genie, Eva!",
    foxyCongrats3: "Juhu, geschafft! Foxy feiert mit dir diesen Erfolg!",
    foxyCongratsAdventureLevel: "Super, Eva! Level geschafft! Foxy ist stolz auf deine Abenteuerlust!",
    foxyCongratsQuiz: "Klasse Leistung im Quiz, Eva! Foxy wusste, dass du es rockst!",
    foxyCongratsQuizHigh: "Unglaubliche Punktzahl, Eva! Foxy jubelt √ºber deine Mathe-K√ºnste!",
    foxyCongratsQuizMid: "Tolle Arbeit, Eva! Foxy sieht einen Mathe-Star heranwachsen!",
    foxyCongratsQuizLow: "Gut gemacht, Eva! √úbe weiter, und Foxy wei√ü, du wirst noch besser!",

    foxyAdventureCorrectAnswer: "Richtig so, Abenteurerin Eva! Foxy feuert dich an!",
    foxyQuizCorrectAnswer: "Genau richtig, Quiz-Champion Eva! Foxy ist begeistert!",

    // Adventure Mode specific Foxy messages
    foxyAdventureIncorrect: "Das war nicht ganz richtig. Schau genau hin und versuch es nochmal!",
    foxyAdventureTimeLow: "Vorsicht, die Zeit wird knapp!",
    foxyAdventurePass1Star: "Super, Level geschafft und 1 Stern f√ºr dich!",
    foxyAdventurePass2Stars: "Ausgezeichnet! Level gemeistert und 2 Sterne verdient!",
    foxyAdventurePass3Stars: "Wow! Fantastisch! 3 Sterne f√ºr dich in diesem Level!",
    foxyAdventureFail: "Schade, diesmal nicht bestanden. Gib nicht auf, versuch es nochmal!",

    // Memory Game specific Foxy messages
    foxyMemoryMatchFound: "Super Fund, Eva! Das ist ein Paar!",
    foxyMemoryNoMatch: "Nicht ganz ein Paar. Such weiter, Foxy wei√ü, du findest sie!",
    foxyMemoryFewPairsLeft: "Fast geschafft, Eva! Nur noch ein paar Paare!",
    foxyMemoryGameComplete: "Juhu! Du hast alle Paare gefunden, Eva! Foxy ist mega stolz!",

    // RealWorldMath specific Foxy messages
    foxyRealWorldProblem: "Hier ist eine Alltagsaufgabe, Eva! √úberlege, wie Multiplizieren helfen kann.",
    foxyRealWorldExpression: "Welche Rechnung passt zur Geschichte, Eva? Foxy ist gespannt!",
    foxyRealWorldAnswer: "Super! Und was ist die L√∂sung? Foxy wei√ü, du kannst das ausrechnen!",
    foxyRealWorldCorrect: "Genau! Das hast du wie ein Profi gel√∂st, Eva! Foxy ist super beeindruckt!",
    foxyRealWorldIncorrect: "Hmm, das stimmt nicht ganz. Schauen wir uns die L√∂sung gemeinsam an und lernen daraus, Eva!",

    // FantasyMath specific Foxy messages
    foxyFantasyProblem: "Eine magische Herausforderung erwartet dich, Eva! Welcher Zauber wird sie l√∂sen?",
    foxyFantasyExpression: "W√§hle deine Zauberformel weise, Eva! Foxy glaubt an deine Kraft!",
    foxyFantasyAnswer: "Der Zauber ist fast fertig! Was ist die letzte magische Zahl, Eva?",
    foxyFantasyCorrect: "Abrakadabra! Du hast die Magie gemeistert, Eva! Foxy ist erstaunt √ºber deine F√§higkeiten!",
    foxyFantasyIncorrect: "Oh je, der Zauber ist etwas verpufft. Schauen wir uns die richtige Magie an und versuchen es nochmal, Eva!",

    foxyEncouragementStreak3: "Wow, 3 in Folge! Du hast einen Lauf!",
    foxyEncouragementStreak5: "Wahnsinn, 5 richtig! Foxy ist super beeindruckt!",
    foxyEncouragementTryAgain: "Hoppla, nicht ganz! Foxy wei√ü, du schaffst die n√§chste!",
    foxyEncouragementQuizKeepTrying: "Guter Versuch, Eva! Foxy sagt: Nicht aufgeben, √úbung macht den Meister!",

    foxyTimeRunningOutQuiz: "Die Zeit wird knapp, Eva! Konzentrier dich und gib nochmal alles!",

    foxyHintMessage: "Hmm, brauchst du einen kleinen Tipp von Foxy?",
    foxyGeneralCorrectMessage: "Super gemacht, Eva! Foxy freut sich mit dir!", // Added for general correct answer feedback
    foxyLetsPracticeNewTable: "Tolle Wahl! Lass uns anfangen, diese Reihe zu √ºben.",
    foxyShowAnswer: "Hier ist die richtige Antwort. Schau sie dir gut an!",

    // PracticeMode Smart Explanations
    visualDotsResult: "{b} Reihen √ó {a} Punkte = {result} gesamt",
    skipCountingStep1: "Beginne mit dem Z√§hlen in {a}er-Schritten:",
    skipCountingStep2: "{sequence}",
    skipCountingStep3: "Wir haben {b} Mal gez√§hlt: {a} √ó {b} = {result}",
    decompositionStep1: "Zerlege {a} = {tens} + {ones}",
    decompositionStep2: "{a} √ó {b} = ({tens} + {ones}) √ó {b}",
    decompositionStep3: "= {tensResult} + {onesResult} = {result}",
    decompositionFallback: "{a} √ó {b} = {result}",
    ninesPatternConcept: "Spezieller 9er-Trick: Verwende die 'Subtrahiere von 10'-Methode",
    ninesStep1: "Beachte, das ist 9 √ó {other}",
    ninesStep2: "Denke: 10 √ó {other} = {result}",
    ninesStep3: "Dann subtrahiere {other}: {calc1} - {other} = {calc2}",
    ninesStep4: "Also 9 √ó {other} = {result}",
    ninesPattern: "9 mal irgendwas: multipliziere mit 10, dann subtrahiere die Zahl!",
    ninesMnemonic: "Denke daran: 9 ist nur 1 weniger als 10!",
    ninesDigitSumConcept: "Die Magie der 9: Die Ziffern der Antwort ergeben immer 9!",
    ninesDigitSumStep1: "Bei 9 √ó {other} ist die erste Ziffer der Antwort eins weniger als {other}.",
    ninesDigitSumStep2: "Also ist die erste Ziffer {other} - 1 = {firstDigit}.",
    ninesDigitSumStep3: "Die beiden Ziffern der Antwort m√ºssen zusammen 9 ergeben. Also, {firstDigit} + ? = {sum}.",
    ninesDigitSumStep4: "Die zweite Ziffer muss {secondDigit} sein.",
    ninesDigitSumStep5: "Die Antwort ist {result}.",
    ninesDigitSumPattern: "Bei 9 √ó N ist die erste Ziffer N-1 und die zweite Ziffer erg√§nzt die erste zu 9.",
    ninesDigitSumMnemonic: "Bei den Neunern ergeben die Ziffern immer eine perfekte Neun!",
    ninesFingerTrickConcept: "Benutze deine Finger, um die 9er-Reihe zu l√∂sen!",
    ninesFingerTrickStep1: "Halte beide H√§nde vor dich.",
    ninesFingerTrickStep2: "Um 9 mit {other} zu multiplizieren, knicke deinen {other}. Finger (von links) ein.",
    ninesFingerTrickStep3: "Die Finger links vom geknickten Finger sind die Zehnerstelle. Du hast {firstDigit} Finger oben.",
    ninesFingerTrickStep4: "Die Finger rechts sind die Einerstelle. Du hast {secondDigit} Finger oben.",
    ninesFingerTrickStep5: "Die Antwort lautet also {result}.",
    ninesFingerTrickPattern: "Knicke den N-ten Finger f√ºr 9xN. Linke Finger sind Zehner, rechte Finger sind Einer.",
    ninesFingerTrickMnemonic: "Deine zehn Finger sind ein magischer 9er-Rechner!",
    elevensPatternConcept: "Magisches 11er-Muster f√ºr einzelne Ziffern",
    elevensStep1: "Spezielles 11er-Muster: 11 √ó {digit}",
    elevensStep2: "Schreibe einfach die Ziffer zweimal: {digit}{digit}",
    elevensStep3: "Pr√ºfe: 11 √ó {digit} = {result}",
    elevensPattern: "11 √ó einzelne Ziffer = wiederhole die Ziffer!",
    elevensMnemonic: "11 sieht gerne doppelt!",
    tensConcept: "Mit 10 multiplizieren ist super einfach!",
    tensStep1: "Das ist {other} √ó 10 (oder 10 √ó {other}).",
    tensStep2: "Um eine beliebige Zahl mit 10 zu multiplizieren, h√§nge einfach eine Null an.",
    tensStep3: "Also wird aus {other} {result}.",
    tensStep4: "Die Antwort ist {other} √ó 10 = {result}.",
    tensPattern: "Jede Zahl √ó 10 = diese Zahl mit einer 0 am Ende.",
    tensMnemonic: "Zehn ist am einfachsten - einfach eine Null dranh√§ngen!",
    twosConcept: "Mit 2 multiplizieren ist einfach Verdoppeln!",
    twosStep1: "Das ist 2 √ó {otherNum} (oder {otherNum} √ó 2).",
    twosStep2: "Verdoppeln bedeutet, die Zahl zu sich selbst zu addieren: {otherNum} + {otherNum}.",
    twosStep3: "Also, 2 √ó {otherNum} = {result}.",
    twosPattern: "Jede Zahl √ó 2 = diese Zahl + sie selbst.",
    twosMnemonic: "Zwei macht ein Paar, einfach addieren!",
    fivesHalfOfTenConcept: "Mit 5 multiplizieren nutzt den 'H√§lfte von 10'-Trick!",
    fivesHalfOfTenStep1: "Das ist 5 √ó {otherNum} (oder {otherNum} √ó 5).",
    fivesHalfOfTenStep2: "Denke: (10 √ó {otherNum}) √∑ 2. Das ist {tenTimesOther} √∑ 2.",
    fivesHalfOfTenStep3: "Die H√§lfte von {tenTimesOther} ist {result}. Also, 5 √ó {otherNum} = {result}.",
    fivesHalfOfTenPattern: "Jede Zahl √ó 5 = (diese Zahl √ó 10) √∑ 2.",
    fivesHalfOfTenMnemonic: "F√ºnf ist die H√§lfte von zehn, leicht zu sehen!",
    fivesNickelCountingConcept: "Mit 5 multiplizieren ist wie Nickel z√§hlen!",
    fivesNickelCountingStep1: "Das ist 5 √ó {otherNum}. Stell dir vor, du hast {otherNum} F√ºnf-Cent-M√ºnzen.",
    fivesNickelCountingStep2: "Jede M√ºnze ist 5 Cent wert.",
    fivesNickelCountingStep3: "Du kannst in 5er-Schritten z√§hlen, {otherNum} Mal.",
    fivesNickelCountingStep4: "Lass uns z√§hlen: 5, 10, 15... bis zu {result}.",
    fivesNickelCountingStep5: "Also sind {otherNum} F√ºnf-Cent-M√ºnzen {result} Cent wert. {otherNum} √ó 5 = {result}.",
    fivesNickelCountingPattern: "Die Antwort endet immer auf eine 5 oder eine 0.",
    fivesNickelCountingMnemonic: "F√ºnf, zehn, f√ºnfzehn, zwanzig... z√§hle die M√ºnzen, du hast genug!",
    pureDoublesConcept: "Verdoppeln! Nutze kleinere Fakten, die du kennst.",
    pureDoublesStep1: "Aufgabe: {a} √ó {b}.",
    pureDoublesStep2: "Da {a} eine gerade Zahl ist, kannst du sie halbieren: {a} = {halfA} + {halfA}.",
    pureDoublesStep3: "Also ist {a} √ó {b} dasselbe wie ({halfA} √ó {b}) + ({halfA} √ó {b}).",
    pureDoublesStep4: "Berechne zuerst {halfA} √ó {b} = {halfResult}.",
    pureDoublesStep5: "Verdopple nun dieses Ergebnis: {halfResult} + {halfResult} = {result}.",
    pureDoublesPattern: "F√ºr gerade Zahlen: N √ó M = (N/2 √ó M) + (N/2 √ó M).",
    pureDoublesMnemonic: "Wenn eine Zahl gerade ist, teile sie in zwei, l√∂se einen Teil und verdopple ihn dann!",
    squaresConcept: "Eine Zahl mit sich selbst multiplizieren nennt man 'Quadrieren'.",
    squaresStep1: "Das ist {num} √ó {num}.",
    squaresStep2: "Das Quadrat von {num} ist {result}. Also, {num} √ó {num} = {result}.",
    squaresPattern: "{num} √ó {num} ist ein 'perfektes Quadrat'. Diese sind gut zu lernen!",
    squaresMnemonic: "Quadrate sind besonders, lerne sie gut!",
    advElevensConcept: "Fortgeschrittener 11er-Trick f√ºr zweistellige Zahlen",
    advElevensStep1: "F√ºr 11 √ó {b}:",
    advElevensStep2: "Trenne die Ziffern von {b}: {firstDigit} und {secondDigit}.",
    advElevensStep3: "Addiere sie: {firstDigit} + {secondDigit} = {middleSum}.",
    advElevensStep4: "Setze die Summe in die Mitte: {firstDigit}{middleSum}{secondDigit}. Also, 11 √ó {b} = {result}.",
    advElevensStep5: "{middleSum} ist zweistellig. Nutze {middleDigit} f√ºr die Mitte, √ºbertrage {carry} zur ersten Ziffer.",
    advElevensStep6: "Neue erste Ziffer: {firstDigit}+{carry}={newFirstDigit}. Ergebnis: {newFirstDigit}{middleDigit}{secondDigit}. Also, 11 √ó {b} = {result}.",
    advElevensPattern: "11 √ó AB = A (A+B) B. Wenn A+B > 9, √ºbertrage.",
    advElevensMnemonic: "11er sind knifflig, aber cool!",
    nearDoublesConcept: "Multiplizieren von aufeinanderfolgenden Zahlen wie {a} √ó {b}.",
    nearDoublesStep1: "Das ist {a} √ó {b}. Beachte, {b} ist {a} + 1.",
    nearDoublesStep2: "Du kannst dies als ({a} √ó {a}) + {a} betrachten, also {aSquared} + {a}.",
    nearDoublesStep3: "Also, {aSquared} + {a} = {result}. Daher ist {a} √ó {b} = {result}.",
    nearDoublesPattern: "n √ó (n+1) = n¬≤ + n. (Quadriere die kleinere Zahl, dann addiere sie erneut).",
    nearDoublesMnemonic: "Nachbarn helfen: Quadriere die Kleine, addiere sie drauf!",
    memoryTrickConcept: "Ein lustiger Reim oder eine Geschichte, um sich diesen Fakt zu merken!",
    memory_trick_6x8: "Sechs mal acht ist achtundvierzig. Also merke dir: 6 x 8 = 48!",
    memory_trick_3x9: "Drei mal neun ist siebenundzwanzig, das ist fein!",
    benchmarkConcept: "Nutze einfache Zahlen als Sprungbrett!",
    benchmarkStep1: "Lass uns {a} √ó {b} l√∂sen.",
    benchmarkStep2: "Beginne mit einem einfachen Anker: {benchmark} √ó {b} = {result}.",
    benchmarkStep3: "Jetzt ist {a} {diff} mehr als {benchmark}.",
    benchmarkStep4: "Also m√ºssen wir {diff} weitere Gruppe(n) von {b} hinzuf√ºgen, das sind {diff_b}.",
    benchmarkStep5: "Zum Schluss addiere sie: {benchmarkResult} + {diff_b} = {result}.",
    benchmarkPattern: "L√∂se ein nahes, einfaches Problem und passe es dann an.",
    benchmarkMnemonic: "Nutze einen Anker, um nahe heranzukommen, und gehe dann zur Antwort!",
    roundingAndAdjustingConcept: "Runde auf eine einfache Zahl und passe dann an!",
    roundingAndAdjustingStep1: "Runde {a} auf {roundedNumber} auf.",
    roundingAndAdjustingStep2: "Multipliziere zuerst: {roundedNumber} √ó {b} = {initialProduct}.",
    roundingAndAdjustingStep3: "Die Differenz ist {roundedNumber} - {a} = {difference}.",
    roundingAndAdjustingStep4: "Wir m√ºssen um {difference} √ó {b} = {adjustment} anpassen.",
    roundingAndAdjustingStep5: "Subtrahiere die Anpassung: {initialProduct} - {adjustment} = {result}.",
    roundingAndAdjustingPattern: "a √ó b = (gerundetes_a √ó b) - ((gerundetes_a - a) √ó b)",
    roundingAndAdjustingMnemonic: "Aufrunden, multiplizieren, dann das Extra wegnehmen!",
    leftToRightConcept: "Rechne f√ºr mehr Geschwindigkeit von links nach rechts!",
    leftToRightStep1: "Zerlege die gr√∂√üere Zahl: {b} = {tens} + {ones}.",
    leftToRightStep2: "Multipliziere den Zehnerteil: {a} √ó {tens} = {tensResult}.",
    leftToRightStep3: "Multipliziere den Einerteil: {a} √ó {ones} = {onesResult}.",
    leftToRightStep4: "Addiere die Ergebnisse: {tensResult} + {onesResult} = {result}.",
    leftToRightPattern: "a √ó (Z+E) = (a√óZ) + (a√óE)",
    leftToRightMnemonic: "Von links nach rechts, das macht Mathe leicht!",
    bfkfConcept: "Aufbauend auf einfacheren, bekannten Fakten.",
    bfkfStep1: "Aufgabe: {a} √ó {b}.",
    bfkf3sStep2: "Zerlege 3: 3 = 2 + 1.",
    bfkf3sStep3: "Also, 3 √ó {b} = (2 √ó {b}) + (1 √ó {b}).",
    bfkf3sStep4: "Wir wissen 2 √ó {b} ist {val1} (Verdopplungsstrategie), und 1 √ó {b} ist {val2}.",
    bfkf3sStep5: "Addiere sie: {sum1} + {sum2} = {result}.",
    bfkf3sPattern: "3√óN = (2√óN) + (1√óN)",
    bfkf4sStep2: "Zerlege 4: 4 = 2 + 2.",
    bfkf4sStep3: "Also, 4 √ó {b} = (2 √ó {b}) + (2 √ó {b}).",
    bfkf4sStep4: "Wir wissen 2 √ó {b} ist {val1} (Verdopplungsstrategie).",
    bfkf4sStep5: "Addiere sie: {sum1} + {sum2} = {result}.",
    bfkf4sPattern: "4√óN = (2√óN) + (2√óN)",
    bfkf6sStep2: "Zerlege 6: 6 = 5 + 1.",
    bfkf6sStep3: "Also, 6 √ó {b} = (5 √ó {b}) + (1 √ó {b}).",
    bfkf6sStep4: "Wir wissen 5 √ó {b} ist {val1} (F√ºnferstrategie), und 1 √ó {b} ist {val2}.",
    bfkf6sStep5: "Addiere sie: {sum1} + {sum2} = {result}.",
    bfkf6sPattern: "6√óN = (5√óN) + (1√óN)",
    bfkf7sStep2: "Zerlege 7: 7 = 5 + 2.",
    bfkf7sStep3: "Also, 7 √ó {b} = (5 √ó {b}) + (2 √ó {b}).",
    bfkf7sStep4: "Wir wissen 5 √ó {b} ist {val1} (F√ºnferstrategie), und 2 √ó {b} ist {val2} (Verdopplungsstrategie).",
    bfkf7sStep5: "Addiere sie: {sum1} + {sum2} = {result}.",
    bfkf7sPattern: "7√óN = (5√óN) + (2√óN)",
    bfkf8sStep2: "Denke an 8 als 10 - 2.",
    bfkf8sStep3: "Also, 8 √ó {b} = (10 √ó {b}) - (2 √ó {b}).",
    bfkf8sStep4: "Wir wissen 10 √ó {b} ist {val1} (Zehnerstrategie), und 2 √ó {b} ist {val2} (Verdopplungsstrategie).",
    bfkf8sStep5: "Subtrahiere sie: {sum1} - {sum2} = {result}.",
    bfkf8sPattern: "8√óN = (10√óN) - (2√óN)",
    bfkfMnemonic: "Nutze, was du wei√üt, um herauszufinden, was du nicht wei√üt!",
    onesConcept: "Mit 1 multiplizieren ist super einfach!",
    onesStep1: "Das ist {otherNum} √ó 1 (oder 1 √ó {otherNum}).",
    onesStep2: "Jede Zahl, die mit 1 multipliziert wird, bleibt einfach sie selbst.",
    onesStep3: "Also, {otherNum} √ó 1 = {result}.",
    onesPattern: "Jede Zahl √ó 1 = diese Zahl. Sie bleibt gleich!",
    onesMnemonic: "Die Eins ist wie ein Zauberspiegel, sie zeigt die Zahl direkt zur√ºck!",
    visualArrayConcept: "Stell dir {a} √ó {b} vor, als w√ºrdest du {b} Gruppen von {a} Objekten bilden",
    visualStep1: "Mache {b} Gruppen von {a} Punkten",
    visualStep2: "Z√§hle alle Punkte: {result}",
    visualStep3: "Jede Reihe hat {a} Punkte, insgesamt {b} Reihen",
    visualRealWorld: "Wie {b} Schachteln mit je {a} Spielzeugen = {result} Spielzeuge insgesamt",
    skipCountingConcept: "Z√§hle in {a}er-Schritten, {b} Mal",
    skipCountingPattern: "{a}, {a2}, {a3}... bis zu {result}",
    skipCountingMnemonic: "Z√§hle in {a}er-Schritten!",
    decompositionConcept: "Zerlege in einfachere Teile",
    decompositionPattern: "Zerlege gro√üe Zahlen in Zehner und Einer",
    strategyLabel: "{strategy}",
    strategyLabelSuffix: "Strategie",
    keyConceptLabel: "üí° Schl√ºsselkonzept:",
    visualLabel: "üëÅÔ∏è Visuell:",
    stepsLabel: "üìù Schritte:",
    patternLabel: "üîç Muster:",
    memoryTrickLabel: "üß† Eselsbr√ºcke:",
    realWorldLabel: "üåç Echte Welt:",

    // Strategy Names
    strategyVisualArray: "Visuelle Anordnung",
    strategyPatternRecognition: "Mustererkennung",
    strategySkipCounting: "In Schritten z√§hlen",
    strategyDecomposition: "Zerlegung",
    strategyDoubles: "Verdopplungsstrategie",
    strategyPureDoubles: "Halbieren & Verdoppeln",
    strategyFivesHalfOfTen: "F√ºnfer (H√§lfte von 10)",
    strategyFivesNickelCounting: "F√ºnfer (M√ºnzen z√§hlen)",
    strategySquares: "Quadratzahlen-Strategie",
    strategyNearDoubles: "Nahe-Doppelte-Strategie",
    strategyBuildingKnownFacts: "Aufbau auf Bekanntem",
    strategyOnes: "Einser-Strategie",
    strategyTens: "Zehner-Strategie",
    strategyNines: "Neuner-Strategie",
    strategyNinesDigitSum: "Neuner-Quersummen-Strategie",
    strategyNinesFingerTrick: "Neuner-Finger-Trick",
    strategyElevens: "Elfer-Strategie",
    strategyAdvancedElevens: "Erweiterte Elfer-Strategie",
    strategyMemoryTrick: "Merkspruch-Strategie",
    strategyBenchmark: "Ankerpunkt-Strategie",
    strategyRoundingAndAdjusting: "Runden-und-Anpassen-Strategie",
    strategyLeftToRight: "Links-nach-Rechts-Rechnen",

  closeHintButton: "Tipp schlie√üen",
  explainDifferentlyButton: "Anders erkl√§ren",
  foxyAlternativeHintMessage: "Okay, Eva! Foxy hat einen anderen Tipp f√ºr dich. Schau mal!",
  foxyNoMoreHintsMessage: "Foxy hat dir alle Tricks f√ºr diese Aufgabe gezeigt!",
};
